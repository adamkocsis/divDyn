% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subsample.R
\name{subsample}
\alias{subsample}
\alias{subsampleCR}
\alias{subsampleOXW}
\alias{frequencies}
\alias{subsampleSQSexact}
\alias{subsampleSQSinexact}
\title{Serial subsampling wrapper function}
\usage{
subsample(dat, q, tax = "genus", coll = "collection_no", bin = "SLC",
  FUN = divDyn, iter = 50, type = "cr", intact = NULL,
  duplicates = FALSE, output = "arit", useFailed = FALSE,
  vers = "inexact", ...)

subsampleCR(binVar, q, intact = NULL)

subsampleOXW(binVar, collVar, q, intact = NULL, x = 1)

frequencies(dat, bin, tax, coll, ref = "reference_no", singleton = "ref",
  excludeDominant = TRUE, largestColl = TRUE, fcorr = "good")

subsampleSQSexact(binVar, q, taxVar, collVar, refVar, byList = FALSE,
  intact = NULL, singleton = "ref")

subsampleSQSinexact(binVar, freqVar, q, collVar = NULL, byList = FALSE,
  intact = NULL, appr = "over", trialRet = "occ")
}
\arguments{
\item{dat}{(\code{data.frame}): Occurrence dataset, with \code{bin}, \code{tax} and \code{coll} as column names.}

\item{q}{(\code{numeric)}: Subsampling level argument (mandatory). Depends on the subsampling function, it is the number of occurrences for \code{"cr"}, and the number of desired occurrences to the power of \code{x} for O^x^W. It is also the quorum of the SQS method.}

\item{tax}{(\code{character}): The name of the taxon variable.}

\item{coll}{(\code{character}): The variable name of the collection identifiers.}

\item{bin}{(\code{character}): The name of the subsetting variable (has to be integer). For time series, this is the time-slice variable.}

\item{FUN}{(\code{function}): The function to be iteratively executed on the results of the subsampling trials. If set to \code{NULL}, no function will be executed, and the subsampled datasets will be returned as a \code{list}. By default set to the \code{\link{divDyn}} function. The function must have an argument called \code{dat}, that represents the dataset resulting from a subsampling trial (or the entire dataset). Arguments of the \code{subsample} function call will be searched for potential arguments of this function, which means that already provided variables (e.g. \code{bin} and \code{tax}) will also be used. You can also provide additional arguments (similarly to the \code{\link[base]{apply}} iterator). Functions that allow arguments to pass through (that have argument '...') are not allowed, as well as functions that have the same arguments as \code{subsample} but would require different values.}

\item{iter}{(\code{numeric}): The number of iterations to be executed.}

\item{type}{(\code{character}): The type of subsampling to be implemented. By default this is classical rarefaction (\code{"cr"}). (\code{"oxw"}) stands for occurrence weighted by-list subsampling. If set to (\code{"sqs"}), the program will execute the shareholder quorum subsampling algorithm as it was suggested by Alroy (2010).}

\item{intact}{(\code{numeric}): The bins, which will not be subsampled but will be added to the subsampling trials. Negative values will be treated as indications on which bins to omit. If the number of occurrences does not reach the subsampling quota, by default it will not be represented in the subsampling trials. You can force their inclusion with the \code{intact} argument.}

\item{duplicates}{(\code{logical} ): Toggles whether multiple entries from the same taxon (\code{"tax"}) and collection (\code{"coll"}) variables should be omitted. Useful for omitting occurrences of multiple species-level occurrences of the same genus. It is set to \code{FALSE} by default.}

\item{output}{(\code{character}): If the function output are vectors or matrices, the \code{"arit"} and \code{"geom"} values will trigger simple averaging with arithmetic or geometric means. If the function output of a single trial is again a \code{vector} or a \code{matrix}, setting the output to \code{"dist"} will return the calculated results of every trial, organized in a \code{list} of independent variables (e.g. if the function output is value, the return will contain a single \code{vector}, if it is a \code{vector}, the output will be a list of \code{vector}s, if the function output is a \code{data.frame}, the output will be a \code{list} of \code{matrix} class objects). If \code{output="list"}, the structure of the original function output will be retained, and the results of the individual trials will be concatenated to a \code{list}.}

\item{useFailed}{(\code{logical}): If the bin does not reach the subsampling quota, should the bin be used?}

\item{vers}{(\code{character}): A parameter of SQS. The implementation type either \code{"exact"} or \code{"inexact"}.}

\item{...}{arguments passed to \code{FUN} and the type-specific subsampling functions:}

\item{x}{(\code{numeric}): Argument of the OxW type. The exponent of by-list subsampling, by default it is 1.}

\item{singleton}{\code{(character)}: A parameter of SQS. Either \code{"ref"} or \code{"occ"}. If set to \code{"occ"}, the coverage estimator (e.g. Good's u) will be calculated based on the number of single-occurrence taxa. 
If set to "ref" the number of occurrences belonging to single-reference taxa will be used instead. In case of the inexact algorithm, if set to \code{FALSE} or \code{NA}, then coverage corrections of frequencies will not be applied.}

\item{excludeDominant}{\code{(logical)}: Parameter for the inexact method of SQS. This parameter sets whether the dominant taxon should 
be excluded from all calculations involving frequencies (this is the second correction of Alroy, 2010).}

\item{largestColl}{\code{(logical)}: Parameter for the inexact method of SQS. This parameter sets whether the occurrences of taxa only ever
 found in the most diverse collection should be excluded from the count of 
single-publication occurrences. (this is the third correction of Alroy, 2010) Note that \code{largestColl=TRUE} is dependent on \code{excludeDominant=TRUE}. Setting \code{excludeDominant} to \code{FALSE} will turn this correction off.}

\item{fcorr}{\code{(character)}: Parameter for the inexact method of SQS. either "good" or "alroy". This argument changes the frequency correction procedure of the 
'inexact' version of SQS (Alroy 2010). As not all taxa are present in the samples, 
the sampled frequencies of taxa tend overestimate their frequencies in the sampling pool. 
In Alroy (2010) these are corrected using Good's u ("good", default), in the later versions 
of SQS this metric is changed to a different method using single occurrence and double occurrence taxa ("alroy").}

\item{byList}{(\code{character}): A parameter of the \code{"inexact"} method of SQS. Sets whether occurrences should be subsampled with (\code{FALSE}) or without (\code{TRUE}) breaking the collection integrity. (not yet for the exact algorithm.)}

\item{appr}{(\code{character}): A parameter of the inexact method of SQS. Either "over" (default) or ("under"). The current 
version is not concerned with small fluctuations around the drawn subsampling quorum. 
Therefore, in the \code{inexact} algorithm, sampling is finished when the subset 
either is immediately below the quorum (\code{"under"}) or above it (\code{"over"}).}
}
\description{
The function will take a desired function that has an occurrence dataset as an argument, and reruns it iteratively on the subsets of the dataset.
}
\details{
Although the help file lists some functions, the only interface for the procedures is the \code{subsample} function that serves as a framework for additional functions. All user input happens with this function and only it is exported to the package namespace. Currently the Classical Rarefaction (\code{"cr"}, Raup, 1975), the occurrence weighted by-list subsampling (\code{"oxw"}, Alroy et al., 2001) and the Shareholder Quorum Subsampling methods are implemented (\code{"sqs"}, Alroy, 2010).

For a detailed treatment on what the function does, please see the vignette ('Handout to the R package 'divDyn' v0.4.0 for diversity dynamics from fossil occurrence data').

The subsampleXYZ functions produce a single trial result by returning the row indices of the original datasets.
The CR and OxW types call the \code{subsampleCR}, \code{subsampleOXW} internally. SQS has two different implementations, the \code{"exact"} and \code{"inexact"} approach (Alroy, 2014). The \code{"inexact"} solution is set to be the default method, as it is computationally less demanding. 
The \code{"inexact"} method calls the \code{frequencies} and the \code{subsampleSQSinexact} functions. The first calculates frequencies for each taxon and each bin, the second performs a single subsampling trial. The \code{"exact"} implementation calls the \code{subsampleSQSexact} internal function to perform the trials. You can study the source codes of these functions  at \url{http://www.github.org/adamkocsis/divDyn/R/} in the subsample.R file.

\strong{References:}

Alroy, J., Marshall, C. R., Bambach, R. K., Bezusko, K., Foote, M., Fürsich, F. T., … Webber, A. (2001). Effects of sampling standardization on estimates of Phanerozoic marine diversification. Proceedings of the National Academy of Science, 98(11), 6261-6266.

Alroy, J. (2010). The Shifting Balance of Diversity Among Major Marine Animal Groups. Science, 329, 1191-1194. https://doi.org/10.1126/science.1189910

Raup, D. M. (1975). Taxonomic Diversity Estimation Using Rarefaction. Paleobiology, 1, 333-342. https: //doi.org/10.2307/2400135
}
\examples{

data(corals)
data(stages)
# Example 1-calculate metrics of diversity dynamics
  dd <- divDyn(corals, tax="genus", bin="slc")
  rarefDD<-subsample(corals,iter=50, q=50,
  tax="genus", bin="slc", output="dist", intact=95)
	
# plotting
  plotTS(stages, shading="series", boxes="per", xlim=c(260,0), 
  ylab="range-through diversity (genera)", ylim=c(0,230))
  lines(stages$mid, dd$divRT, lwd=2)
  shades(stages$mid, rarefDD$divRT, col="blue")
  legend("topleft", legend=c("raw","rarefaction"),
    col=c("black", "blue"), lwd=c(2,2), bg="white")
  
  # compare with previous function (is obsolete)
  rarefDD <- crDD(corals, quota=50, iter=100, intactBins=95)
  lines(stages$mid,rarefDD$divRT, col="red", lwd=2)
  
  

# Example 2-SIB diversity 
# draft a simple function to calculate SIB diversity
sib<-function(dat, bin, tax){
  calc<-tapply(INDEX=dat[,bin], X=dat[,tax], function(y){
    length(levels(factor(y)))
  })
  return(calc[as.character(stages$num)])
}
sibDiv<-sib(corals, bin="slc", tax="genus")

# calculate it with subsampling
rarefSIB<-subsample(corals,iter=50, q=50,
  tax="genus", bin="slc", output="arit", intact=95, FUN=sib)
rarefDD<-subsample(corals,iter=50, q=50,
  tax="genus", bin="slc", output="arit", intact=95)

# plot
plotTS(stages, shading="series", boxes="per", xlim=c(260,0), 
  ylab="SIB diversity (genera)", ylim=c(0,230))

lines(stages$mid, rarefDD$divSIB, lwd=2, col="black")
lines(stages$mid, rarefSIB, lwd=2, col="blue")
    

# Example 3 - different subsampling types with default function (divDyn)
# compare different subsampling types
  # classical rarefaction
  cr<-subsample(corals,iter=50, q=20,tax="genus", bin="slc", output="dist", intact=95)
  # by-list subsampling (unweighted) - 3 collections
  UW<-subsample(corals,iter=50, q=3,tax="genus", bin="slc", output="dist", intact=95, type="oxw", x=0)
  # occurrence weighted by list subsampling
  OW<-subsample(corals,iter=50, q=20,tax="genus", bin="slc", output="dist", intact=95, type="oxw", x=1)
 
  SQS<-subsample(corals,iter=50, q=0.4,tax="genus", bin="slc", output="dist", intact=95, type="sqs", ref="reference_no")

# plot
  plotTS(stages, shading="series", boxes="per", xlim=c(260,0), 
  ylab="range-through diversity (genera)", ylim=c(0,100))
  shades(stages$mid, cr$divRT, col="red")
  shades(stages$mid, UW$divRT, col="blue")
  shades(stages$mid, OW$divRT, col="green")
  shades(stages$mid, SQS$divRT, col="cyan")
  
  legend("topleft", bg="white", legend=c("CR (20)", "UW (3)", "OW (20)", "SQS (0.4)"), 
    col=c("red", "blue", "green", "cyan"), lty=c(1,1,1,1), lwd=c(2,2,2,2))

}
