% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{parts}
\alias{parts}
\title{Plot polygons of counts or proportions}
\usage{
parts(x, b = NULL, ord = "up", prop = F, plot = TRUE, col = NULL,
  xlim = NULL, border = NULL, ylim = c(0, 1), na.valid = FALSE,
  labs = T, labs.args = NULL, vertical = F)
}
\arguments{
\item{x}{(numeric vector): The independent variable through which the proportion is tracked. Identical entries are used to assess which values belong together to a set. Their values represent the x coordinate over the plot.}

\item{b}{(character or factor): Category designation.}

\item{ord}{The parameter of the variable order. Either "up" (increasing), "down" (decreasing) or the vector of categories in the desired order.}

\item{prop}{(logical value): Should the diagram show proportions or counts?}

\item{plot}{(logical value): If set to TRUE than the function will plot the output. If set to FALSE, then a matrix with the relevant values will be returned. This output is similar to the output of table(), but handles proportions instantly.}

\item{col}{The colour of polygons. By default this is grayscale.}

\item{xlim}{(numeric vector): Extension of polygons to cover plotting area. Two values, has to exceed the range of x.}

\item{border}{The colour of the polygon borders.}

\item{ylim}{(numeric vector): If prop=TRUE, then the argument controls the position of the proportions in the plotting area. If prop=FALSE, then the entire plotting area will be shifted by the single ylim value.}

\item{na.valid}{(logical value): if TRUE, than the missing values will be treated as an independent category. Entries where x is NA will be omitted either way.}

\item{labs}{(logical value): should the category names be plotted?}

\item{labs.args}{(list): Lists of arguments for the text() function. If one entry for each argument is provided, then it will be applied to all labels. If the number of elements in an argument equals the number of categories to be plotted, then one to one assignment will be used (e.g. for 4 categories in total, if the labs.args list contains a col vector element of length 4, see examples.).}

\item{vertical}{(logical value): Horizontal or vertical plotting? If FALSE, the independent variable will be horizontal, if TRUE, the count/proportion variable will be horizontal. In the latter case xlim and ylim has reversed roles.}
}
\description{
This function plots the changing shares of categories in association with an independent variable.
}
\details{
This function is useful for displaying the changing proportions of a category as time progresses.

To be added: missing portions are omitted in this version, but should be represented as gaps in the polygons.
}
\examples{

# dummy examples 
  # independent variable
  slc<-c(rep(1, 5), rep(2,7), rep(3,6))

  # the categories as they change
  v1<-c("a", "a", "b", "c", "c") # 1
  v2<-c("a", "b", "b", "b", "c", "d", "d") # 2
  v3<-c("a", "a", "a", "c", "c", "d") #3
  va<-c(v1, v2,v3)

  # basic function
    plot(NULL, NULL, ylim=c(0,1), xlim=c(0.5, 3.5))
    parts(slc, va, prop=T)
 
  # vertical plot
    plot(NULL, NULL, xlim=c(0,1), ylim=c(0.5, 3.5))
    parts(slc, va, col=c("red" ,"blue", "green", "orange"), xlim=c(0.5,3.5), labs=T, prop=T, vertical=T)

  # intensive argumentation
    plot(NULL, NULL, ylim=c(0,10), xlim=c(0.5, 3.5))
    parts(slc, va, ord=c("b", "c", "d", "a"), col=c("red" ,"blue", "green", "orange"), 
	  xlim=c(0.5,3.5), labs=T, prop=F, 
	  labs.args=list(cex=1.3, col=c("black", "orange", "red", "blue")))

  # just the values
    parts(slc, va, prop=T,plot=F)
	
# real example
  # the proportion of coral occurrences through time in terms of bathymetry
  data(corals)
  data(stages)

  # time scale plot
  plotTS(stages, shading="series", boxes="per", xlim=c(250,0), 
    ylab="proportion of occurrences", ylim=c(0,1))
  
  # plot of proportions	
  cols <- c("#55555588","#88888888", "#BBBBBB88")
  types <- c("uk", "shal", "deep")
  
  parts(x=stages$mid[corals$slc], b=corals$bath, 
   ord=types, col=cols, prop=T,border=NA, labs=F)
   
  # legend
  legend("left", inset=c(0.1,0), legend=c("unknown", "shallow", "deep"), fill=cols, bg="white", cex=1.4) 

}
