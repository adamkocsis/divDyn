% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{shades}
\alias{shades}
\title{Quantile plot of time series}
\usage{
shades(x, y, col, res = 100, border = NA, interpolate = F,
  method = "symmetric")
}
\arguments{
\item{x}{(numeric): The x coordinates.}

\item{y}{(numeric matrix): The series of distributions to be plotted. Every row represents a distribution of values. The number of rows must equal to the length of x.}

\item{col}{(character value): the color of the quantiles, currently just a single color is allowed.}

\item{res}{(numeric value): If a single value is entered, than it represents the number of quantiles to be shown (coerced to 150, if higher is entered). If it is vector of values, it will be interpreted as the vector of quantiles to be shown. If method="symmetric", only an odd number of quantiles are plotted.}

\item{border}{(character value): the color of the quantile lines}

\item{interpolate}{(logical value): In case the symmetric method is chosen, the series of quantile values can be interpolated with a LOESS function.}

\item{method}{(character value): The default "symmetric" method will plot the mid quantile range with highest opacity and the shades will be more translucent at the tails of the distributions. The "decrease" method will decrease the opacity with higher quantiles, which makes the plotts of low-bounded distributions easier to interpret.}

\item{boxes}{(character): column name indicating the names that should be plotted as a timescale}
}
\description{
This intermediate-level function will plot a time series with the quantiles shown as shades (using alpha values) around the central tendency.
}
\examples{
data(stages)
plotTS(stages, boxes="per", shading="series", ylim=c(-5,5), ylim=c(normal distributions))
  randVar <- t(sapply(1:95, FUN=function(x){rnorm(150, 0,1)}))
  shades(stages$mid, randVar, col="blue", res=20,method="symmetric")	  
  
plotTS(stages, boxes="per", shading="series", ylim=c(0,30), ylab="log-normal distributions")
  shades(stages$mid, randVar, col="blue", res=c(0,0.33, 0.66, 1),method="decrease")	 
}
